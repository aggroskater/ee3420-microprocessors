#IFNDEF KEYPAD_IO	;using definition to prevent duplication of equates
KEYPAD_IO EQU 1
#MSG "KEYPAD.INC REVISION 10/22/2010"
#MSG "COPYRIGHT 2010 WILLIAM STAPLETON"
#MSG "THIS FILE MAY BE FREELY DISTRIBUTED AS LONG AS IT REMAINS UNCHANGED AND FULLY CREDITED."

#INCLUDE SYSTEM_SELECT.INC		;BOARD-SPECIFIC OPTIONS
#INCLUDE MC9S12_REGISTERS.INC		;DEFINITIONS OF ALL SYSTEM MEMORY LOCATIONS AND CONSTANTS
#INCLUDE ASCII.INC			;DEFINITIONS OF ALL ASCII CONTROL CODES
#INCLUDE DELAY.INC

;COMMENT OUT THE FOLLOWING LINE TO INCLUDE THE FULL FILE IN THE LISTING
;	NOLIST

;UNCOMMENT THE FOLLOWING TO ENABLE KEYPAD_ECHO TO SEE THE KEYPAD CHARACTERS ECHOED TO SCI0
;KEYPAD_ECHO	EQU 1
#IFDEF KEYPAD_ECHO
#INCLUDE SCI_IO.inc
#ENDIF

;To include a debounce pause, uncomment the following line
DEBOUNCE	EQU 1

KEYPAD_TYPE1	DC.B "0123"		;ORIGINAL DRAGON12 KEYPAD
		DC.B "4567"
		DC.B "89AB"
		DC.B "CDEF"

KEYPAD_TYPE2	DC.B "123A"		;DRAGON12-PLUS KEYPAD IN HEXADECIMAL MODE
		DC.B "456B"
		DC.B "789C"
		DC.B "E0FD"

KEYPAD_TYPE3 	DC.B "123A"		;DRAGON12-PLUS KEYPAD IN TELEPHONE MODE
		DC.B "456B"	
		DC.B "789C"
		DC.B "*0#D"

#IF SYSTEM_BOARD = DRAGON12PLUS | SYSTEM_BOARD = SPIDER12
;For the Dragon12-Plus (not the original DRAGON12), to have the 'E' and 'F' keys use the '*' and '#' ASCII codes uncomment the following line
#IFNDEF TELEPHONE
TELEPHONE	EQU 1
#ENDIF
;The TELEPHONE control has no effect for the Dragon12 hexadecimal keypad
#ENDIF

#IF SYSTEM_BOARD = DRAGON12
DIGIT_ASCII 	EQU KEYPAD_TYPE1
#ENDIF

#IF SYSTEM_BOARD = DRAGON12PLUS | SYSTEM_BOARD = SPIDER12 
#IFNDEF TELEPHONE
DIGIT_ASCII 	EQU KEYPAD_TYPE2
#ENDIF
#IFDEF TELEPHONE
DIGIT_ASCII 	EQU KEYPAD_TYPE3
#ENDIF
#ENDIF

#IF SYSTEM_BOARD = DRAGON12 | SYSTEM_BOARD = DRAGON12PLUS | SYSTEM_BOARD = SPIDER12
;ON DRAGON12 PORT A IS EQUIPPED WITH KEYPAD CONNECTOR
;ALL BITS OF PORT A HAVE 100KOHM PULL-UP RESISTORS
;THUS ACTIVE-LOW LOGIC IS REQUIRED
KEYPAD_PORT	EQU PORTA
KEYPAD_DDR		EQU DDRA
KEYPAD_COL0	EQU BIT0
KEYPAD_COL1	EQU BIT1
KEYPAD_COL2	EQU BIT2
KEYPAD_COL3	EQU BIT3
KEYPAD_ROW0	EQU BIT4
KEYPAD_ROW1	EQU BIT5
KEYPAD_ROW2	EQU BIT6
KEYPAD_ROW3	EQU BIT7
KEYPAD_COLS	EQU KEYPAD_COL0+KEYPAD_COL1+KEYPAD_COL2+KEYPAD_COL3
KEYPAD_ROWS	EQU KEYPAD_ROW0+KEYPAD_ROW1+KEYPAD_ROW2+KEYPAD_ROW3
#ENDIF

#IFNDEF KEYPAD_PORT
#MSG "KEYPAD DEFINITIONS HAVE NOT BEEN MADE FOR THE SELECTED SYSTEM."
KEYPAD_PORT EQU NULL
#ENDIF

#IFDEF KEYPAD_PORT 

;KEY_ROW_COL	DC.B 0
;KEY_NUMBER	DC.B 0
;KEY_ASCII	DC.B 0

;****************************************************************
;*  GETC_xxxx                                             
;*  subroutines for input of a single character from keypad
;*  Author: William A. Stapleton                                
;*  Required libraries: ASCII.INC, Dragon12_registers.inc                                  
;*  Required peripheral hardware: connection via port  
;*  Expected data on stack at start of subroutine:
;*			at SP+1: 16-bit return address 
;*			at SP: return PPAGE
;*  Expected data in accumulator D at start of subroutine:
;*			none
;*  Data returned on stack:
;*			none
;*  Data returned in accumulator D:
;*  			ASCII code input (8 bits in B)
;*  Notes:		waits indefinitely for character to be input
;****************************************************************
_GETC_KEYPAD:
	PSHX		;SAVE REGISTERS
	PSHY
	LEAS -6,SP	;SAVE TEMPORARY SPACE FOR ROW/COLUMN INFORMATION
			;SAVE TEMPORARY SPACE FOR KEY NUMBER 0-15
			;SAVE TEMPORARY SPACE FOR ASCII CODE
;*  CURRENT DATA ON STACK:
;*	at SP+11: 	16-bit return address 
;*	at SP+10: 	Return PPAGE
;*	at SP+8: 	copy of X 
;*	at SP+6: 	copy of Y 
;*	at SP+4: 	space for ROW/COLUMN INFO
;*	at SP+2: 	space for KEY NUMBER
;*	at SP: 		space FOR ASCII FOR KEY
	MOVW #0, 0,SP
	MOVW #0, 2,SP
	MOVW #0, 4,SP

	
#IF KEYPAD_PORT = PORTA
	BSET PUCR, PUCR_PUPAE
#ENDIF

#IF KEYPAD_PORT = PORTB
	BSET PUCR, PUCR_PUPBE
#ENDIF

#IF KEYPAD_PORT = PORTE
#MSG "USING PORT E FOR KEYPAD I/O IS NOT RECOMMENDED."
	BSET PUCR, PUCR_PUPEE
#ENDIF

#IF KEYPAD_PORT = PORTH
	BSET PERH,$FF	;PER=1 MEANS PULL ENABLED
	BCLR PPSH,$FF	;PPS=0 MEANS ACTIVE LOW
#ENDIF

#IF KEYPAD_PORT = PORTJ
#MSG "USING PORT J FOR KEYPAD I/O IS NOT SUPPORTED."
#FAIL
#ENDIF

#IF KEYPAD_PORT = PORTK
#MSG "USING PORT K FOR KEYPAD I/O IS NOT SUPPORTED."
#FAIL
#ENDIF

#IF KEYPAD_PORT = PORTM
	BSET PERM,$FF	;PER=1 MEANS PULL ENABLED
	BCLR PPSM,$FF	;PPS=0 MEANS ACTIVE LOW
#ENDIF

#IF KEYPAD_PORT = PORTP
	BSET PERP,$FF	;PER=1 MEANS PULL ENABLED
	BCLR PPSP,$FF	;PPS=0 MEANS ACTIVE LOW
#ENDIF

#IF KEYPAD_PORT = PORTS
#MSG "USING PORT S FOR KEYPAD I/O IS NOT RECOMMENDED."
	BSET PERS,$FF	;PER=1 MEANS PULL ENABLED
	BCLR PPSS,$FF	;PPS=0 MEANS ACTIVE LOW
#ENDIF

#IF KEYPAD_PORT = PORTT
	BSET PERT,$FF	;PER=1 MEANS PULL ENABLED
	BCLR PPST,$FF	;PPS=0 MEANS ACTIVE LOW
#ENDIF

#IF KEYPAD_PORT = PORTAD
	BSET PERAD,$FF	;PER=1 MEANS PULL ENABLED
	BCLR PPSAD,$FF	;PPS=0 MEANS ACTIVE LOW
#ENDIF


	MOVB #KEYPAD_COLS,KEYPAD_DDR	;FORCE COLUMNS TO BE OUTPUTS, ROWS INPUTS
	MOVB #KEYPAD_COLS,KEYPAD_PORT	;SET ALL COLUMNS TO "1" INITIALLY

CHECK_COL0:
	MOVB #KEYPAD_COLS,KEYPAD_PORT	;SET ALL COLUMNS TO "1" INITIALLY
	BCLR KEYPAD_PORT, #KEYPAD_COL0	;CLEAR COL0
	NOP				;BRIEF PAUSE FOR OUTPUT TO SETTLE
	BRSET KEYPAD_PORT, #KEYPAD_ROWS, CHECK_COL1	;IF NO ROW = 0 THEN NO KEYPRESS, CHECK NEXT COL
	LDAA KEYPAD_PORT		;READ ROW/COLUMN VALUES
	COMA				;INVERT SO ACTIVE ROW/COL ARE '1' INSTEAD OF '0'
	STAA 4,SP 			;ROW/COLUMN TEMPORARY
	LBRA KEY_PRESSED

CHECK_COL1:
	MOVB #KEYPAD_COLS,KEYPAD_PORT	;SET ALL COLUMNS TO "1" INITIALLY
	BCLR KEYPAD_PORT, #KEYPAD_COL1	;CLEAR COL0
	NOP				;BRIEF PAUSE FOR OUTPUT TO SETTLE
	BRSET KEYPAD_PORT, #KEYPAD_ROWS, CHECK_COL2	;IF NO ROW = 0 THEN NO KEYPRESS, CHECK NEXT COL
	LDAA KEYPAD_PORT		;READ ROW/COLUMN VALUES
	COMA				;INVERT SO ACTIVE ROW/COL ARE '1' INSTEAD OF '0'
	STAA 4,SP 			;ROW/COLUMN TEMPORARY
	LBRA KEY_PRESSED

CHECK_COL2:
	MOVB #KEYPAD_COLS,KEYPAD_PORT	;SET ALL COLUMNS TO "1" INITIALLY
	BCLR KEYPAD_PORT, #KEYPAD_COL2	;CLEAR COL0
	NOP				;BRIEF PAUSE FOR OUTPUT TO SETTLE
	BRSET KEYPAD_PORT, #KEYPAD_ROWS, CHECK_COL3	;IF NO ROW = 0 THEN NO KEYPRESS, CHECK NEXT COL
	LDAA KEYPAD_PORT		;READ ROW/COLUMN VALUES
	COMA				;INVERT SO ACTIVE ROW/COL ARE '1' INSTEAD OF '0'
	STAA 4,SP			;ROW/COLUMN TEMPORARY 
	LBRA KEY_PRESSED

CHECK_COL3:
	MOVB #KEYPAD_COLS,KEYPAD_PORT	;SET ALL COLUMNS TO "1" INITIALLY
	BCLR KEYPAD_PORT, #KEYPAD_COL3	;CLEAR COL0
	NOP				;BRIEF PAUSE FOR OUTPUT TO SETTLE
	BRSET KEYPAD_PORT, #KEYPAD_ROWS, CHECK_COL0	;IF NO ROW = 0 THEN NO KEYPRESS, CHECK NEXT COL
	LDAA KEYPAD_PORT		;READ ROW/COLUMN VALUES
	COMA				;INVERT SO ACTIVE ROW/COL ARE '1' INSTEAD OF '0'
	STAA 4,SP 			;ROW/COLUMN TEMPORARY
	LBRA KEY_PRESSED

	LBRA CHECK_COL0

KEY_PRESSED:				;AT THIS POINT WE SHOULD HAVE ONE ROW/COLUMN IDENTIFIED
	LDAA 4,SP 			;ROW/COLUMN TEMPORARY
	ANDA #$0F			;ISOLATE COLUMN
	TSTA				;TEST FOR VALID DATA (ZERO IS INVALID)
	LBEQ CHECK_COL0
	LDAB #-1
KEY_PR1:
	INCB				;SHIFT UNTIL FIND WHICH COLUMN
	LSRA
	BCC KEY_PR1
	STAB 2,SP 			;SAVE COLUMN NUMBER
	
	LDAA 4,SP 			;ROW/COLUMN TEMPORARY
	ANDA #$F0			;ISOLATE ROW
	TSTA				;TEST FOR VALID DATA (ZERO IS INVALID)
	LBEQ CHECK_COL0
	LDAB #4
KEY_PR2:
	DECB				;SHIFT UNTIL FIND WHICH ROW
	LSLA
	BCC KEY_PR2
	LSLB				;SHIFT ROW NUMBER BY 2 BITS

	LSLB
	ADDB 2,SP 			;ADD COLUMN NUMBER
	STAB 2,SP 			;SAVE KEY NUMBER (0-15)

	ldaa 2,sp
	
	
	LDX #DIGIT_ASCII
	LDAB 2,SP 			;KEY NUMBER (0-15)
	ABX				;INDEX INTO ARRAY
	LDAB 0,X			;GET ASCII CODE
	STAB 0,SP 			;ASCII CODE FOR KEY

#IFDEF KEYPAD_ECHO
	PUTC_SCI0
#ENDIF


#IFDEF DEBOUNCE
	DELAY_BY_MS #5
#ENDIF

;WAIT FOR KEY TO BE RELEASED BEFORE PROCEEDING
;FORCES ONE CHARACTER GENERATED PER KEYPRESS
KEY_RELEASE:
	BRSET KEYPAD_PORT, #KEYPAD_ROWS, KEYS_NONE
	BRA KEY_RELEASE

KEYS_NONE:
#IFDEF DEBOUNCE
	DELAY_BY_MS #5
#ENDIF
 	
GETC_KEYPAD_DONE:	
	LDAB 0,SP 	;ASCII CODE FOR KEY

	LEAS 6,SP		;CLEAR TEMPORARY SPACE FROM STACK

	PULY		;RESTORE REGISTERS
	PULX
	RTC


#ENDIF ; KEYPAD_PORT != NULL


;THE FOLLOWING LINE RESTORES LISTING FOR CODE OUTSIDE OF THIS LIBRARY
	LIST


#ENDIF	;#IFNDEF KEYPAD_IO	;using definition to prevent duplication of equates


