SETZ32:					;CORRECTLY SET Z FLAG FOR 32-BIT NUMBERS 
	PSHD				;SAVE D, X, AND CCR REGISTERS
	PSHX
	PSHC
	LDAB #4				;COUNTER FOR 4 BYTES (32 BITS)
	BSET 0,SP,CCR_Z	;ASSUME NUMBER IS ZERO D AND SET Z BIT IN STACK COPY OF CCR
SETZ32_1:
	LDAA 1,X+			;LOAD 1 BYTE OF NUMBER
	TSTA				;TEST IF BYTE EQUAL TO 0
	BEQ SETZ32_2		;IF EQUAL TO 0, DON'T CHANGE ASSUMPTION OF ZERO
	BCLR 0,SP,CCR_Z	;AT THIS LINE AT LEAST 1 BYTE IS NON-ZERO SO CLEAR Z FLAG
SETZ32_2:
	DBNE B,SETZ32_1	;REPEAT FOR ALL 4 BYTES
	PULC				;UPDATE CCR WITH CORRECTED VALUE
	PULX				;RESTORE REGISTERS
	PULD
	RTS

ADD32:			;32 BIT ADDITION 
	;WITH X POINTING TO DESTINATION/FIRST SOURCE 
	;AND Y POINTING TO SECOND SOURCE
	PSHD
	PSHX
	PSHY
	LDAB #4		;4 BYTES
	ADDX #3		;INITIAL OFFSET IS START PLUS 3
	ADDY #3
	CLC			;START WITH CARRY=0
ADD32_1:
	LDAA 0,X	;LOAD LEAST SIGNIFICANT REMAINING BYTE OF FIRST SOURCE
	ADCA 1,Y-	;ADD LEAST SIGNIFICANT REMAINING BYTE OF SECOND SOURCE AND UPDATE POINTER
	STAA 1,X-	;SATORE LEAST SIGNIFICANT REMAINING BYTE OF DESTINATION OVER SOURCE THEN UPDATE POINTER
	DBNE B,ADD32_1	;REPEAT LOOP FOR 4 BYTES
	INX			;RE-POINT X TO START OF DESTINATION
	JSR SETZ32 ;CORRECT Z BIT OF CCR
	PULY
	PULX
	PULD
	RTS

INC32:			;32-BIT INCREMENT IS SAME ALGORITHM AS 32-BIT ADDITION
				;EXCEPT SECOND SOURCE IS CONSTANT 0 AND INITIAL CARRY = 1
	PSHD
	PSHX
	LDAB #4
	ADDX #3
	ADDY #3
	SEC
INC32_1:
	LDAA 0,X	
	ADCA #0
	STAA 1,X-
	DBNE B,INC32_1
	INX
	JSR SETZ32
	PULX
	PULD
	RTS

DEC32:		;32-BIT INCREMENT IS SAME ALGORITHM AS 32-BIT SUBTRACTION
			;EXCEPT SECOND SOURCE IS CONSTANT 0 AND INITIAL CARRY = 1
	PSHD
	PSHX
	LDAB #4
	ADDX #3
	ADDY #3
	SEC
DEC32_1:
	LDAA 0,X	
	SBCA #0
	STAA 1,X-
	DBNE B,DEC32_1
	INX
	JSR SETZ32
	PULX
	PULD
	RTS


CMP32:			;32-BIT COMPARISON IS SUBTRACTION OPERATION WITHOUT STORING THE RESULT
				;BUT CORRECTLY SETTING THE FLAGS
	PSHD
	PSHX
	PSHY
	PSHC
	LDAB #4
	ADDX #3
	ADDY #3
	CLC
CMP32_1:
	LDAA 1,X-	
	SBCA 1,Y-
	PSHA
	DBNE B,CMP32_1
	TFR CCR,A	
	LEAX 4,SP
	STAA 0,X
	BSET 0,X,CCR_Z		;ASSUME NUMBER IS ZERO
	LDAB #4
CMP32_2:
	PULA
	TSTA
	BEQ CMP32_3
	BCLR 0,X,CCR_Z		;IF ANY BYTE IS NON-ZERO CLEAR THE Z BIT
CMP32_3:
	DBNE B,CMP32_2
	PULC
	PULY
	PULX
	PULD
	RTS

TST32:			;TST32 IS 32-BIT COMPARISON WITH CONSTANT 0
	PSHD
	PSHX
	PSHY
	PSHC
	LDAB #4
	ADDX #3
	ADDY #3
	CLC
TST32_1:
	LDAA 1,X-	
	SBCA #0
	PSHA
	DBNE B,TST32_1
	TFR CCR,A	
	LEAX 4,SP
	STAA 0,X
	BSET 0,X,CCR_Z		;ASSUME NUMBER IS ZERO
	LDAB #4
TST32_2:
	PULA
	TSTA
	BEQ TST32_3
	BCLR 0,X,CCR_Z		;IF ANY BYTE IS NON-ZERO CLEAR THE Z BIT
TST32_3:
	DBNE B,CMP32_2
	PULC
	PULY
	PULX
	PULD
	RTS

